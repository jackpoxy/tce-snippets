{
	"Layout_基本用法": {
		"prefix": "tce-layout",
		"body": [
			"<TCELayout>",
			"  <Header",
			"    showBackButton={true}",
			"    onBackButtonClick={() => {",
			"      alert('你点击了返回按钮');",
			"    }}",
			"    title=\"单卡片内容\"",
			"    subtitle=\"body中默认集成一个card\"",
			"    operation={",
			"      <Fragment>",
			"        <Button type=\"primary\" onClick={() => {}}>",
			"          IDC信息导入",
			"        </Button>",
			"        <Button",
			"          icon=\"download\"",
			"          title=\"下载\"",
			"          className=\"bdm-download\"",
			"          onClick={() => {}}",
			"        />",
			"      </Fragment>",
			"    }",
			"  />",
			"  <Body status={status}>内容卡片</Body>",
			"</TCELayout>"
		],
		"description": "Layout_基本用法"
	},
	"Layout_多卡片内容": {
		"prefix": "tce-layout",
		"body": [
			"<TCELayout>",
			"  <Header",
			"    showBackButton={true}",
			"    onBackButtonClick={() => {",
			"      alert('你点击了返回按钮');",
			"    }}",
			"    title=\"多卡片内容\"",
			"    subtitle=\"自定义卡片\"",
			"    operation={",
			"      <Fragment>",
			"        <Button type=\"primary\" onClick={() => {}}>",
			"          IDC信息导入",
			"        </Button>",
			"        <Button",
			"          icon=\"download\"",
			"          title=\"下载\"",
			"          className=\"bdm-download\"",
			"          onClick={() => {}}",
			"        />",
			"      </Fragment>",
			"    }",
			"  />",
			"  <Body customizeCard={true} status={status}>",
			"    <Card className=\"tce-component-card\">卡片一内容</Card>",
			"    <Card className=\"tce-component-card\">卡片二内容</Card>",
			"  </Body>",
			"</TCELayout>"
		],
		"description": "Layout_多卡片内容"
	},
	"Layout_默认region的使用": {
		"prefix": "tce-layout",
		"body": [
			"<TCELayout>",
			"  <Header",
			"    showRegion={true}",
			"    productCode=\"CVM\"",
			"    showBackButton={true}",
			"    onBackButtonClick={() => {",
			"      alert('你点击了返回按钮');",
			"    }}",
			"    title=\"单卡片内容\"",
			"    subtitle=\"body中默认集成一个card\"",
			"    operation={",
			"      <Fragment>",
			"        <Button type=\"primary\" onClick={() => {}}>",
			"          IDC信息导入",
			"        </Button>",
			"        <Button",
			"          icon=\"download\"",
			"          title=\"下载\"",
			"          className=\"bdm-download\"",
			"          onClick={() => {}}",
			"        />",
			"      </Fragment>",
			"    }",
			"  />",
			"  <Body>内容卡片</Body>",
			"</TCELayout>"
		],
		"description": "Layout_默认region的使用"
	},
	"Layout_自定义region的使用": {
		"prefix": "tce-layout",
		"body": [
			"<TCELayout>",
			"  <Header",
			"    showRegion={true}",
			"    regionList={regionList}",
			"    onRegionChange={onRegionChange}",
			"    showBackButton={true}",
			"    onBackButtonClick={() => {",
			"      alert('你点击了返回按钮');",
			"    }}",
			"    title=\"单卡片内容\"",
			"    subtitle=\"body中默认集成一个card\"",
			"    operation={",
			"      <Fragment>",
			"        <Button type=\"primary\" onClick={() => {}}>",
			"          IDC信息导入",
			"        </Button>",
			"        <Button",
			"          icon=\"download\"",
			"          title=\"下载\"",
			"          className=\"bdm-download\"",
			"          onClick={() => {}}",
			"        />",
			"      </Fragment>",
			"    }",
			"  />",
			"  <Body>内容卡片</Body>",
			"</TCELayout>"
		],
		"description": "Layout_自定义region的使用"
	},
	"Layout_带Tabs组件使用": {
		"prefix": "tce-layout",
		"body": [
			"<TCELayout>",
			"  <Header",
			"    showBackButton={true}",
			"    onBackButtonClick={() => {",
			"      alert('你点击了返回按钮');",
			"    }}",
			"    title=\"包含tabs\"",
			"  />",
			"  <Body layoutTabs={layoutTabs} status={status} />",
			"</TCELayout>"
		],
		"description": "Layout_带Tabs组件使用"
	},
	"Form_基本用法": {
		"prefix": "tce-form",
		"body": [
			"<TCEForm",
			"  initialValues={{",
			"    link: 'https://www.tencent.com/',",
			"    company: 'tencent',",
			"    noEdit: '不可编辑 InputField',",
			"    name: 'Dickens',",
			"    age: '18',",
			"    age2: 18,",
			"    // eslint-disable-next-line no-undefined",
			"    gender: 1,",
			"    hobby: ['1', '2'],",
			"    education: 'master',",
			"    overtime: true,",
			"    remark: '这是初始化的值',",
			"    tel: { code: '86', phone: '13888888888' },",
			"    address: {",
			"      province: '广东',",
			"      city: '深圳',",
			"      district: '南山区',",
			"      detail: '深南大道10000号'",
			"    },",
			"    ipAddress: '10.0.1.1/16',",
			"    tags: [],",
			"    workTime: '',",
			"    experience: [",
			"      {",
			"        company: '腾讯',",
			"        position: '前端'",
			"      },",
			"      {",
			"        company: '阿里巴巴',",
			"        position: '后端'",
			"      }",
			"    ]",
			"  }}",
			"  validationSchema={validationSchema}",
			"  validate={(values) => {",
			"    const errors = {};",
			"",
			"    if (values['experience'][0]['company'] === '腾讯') {",
			"      // 这里必须以 字段名+_error 的方式命名，屏蔽字段自身的报错",
			"      errors['experience_error'] = [",
			"        {",
			"          company: '腾讯err',",
			"          position: '前端err'",
			"        },",
			"        {",
			"          company: '阿里巴巴err',",
			"          position: '后端err'",
			"        }",
			"      ];",
			"    }",
			"",
			"    return errors;",
			"  }}",
			"  onSubmit={(values) => {",
			"    alert(JSON.stringify(values));",
			"  }}",
			"  layout={layout}",
			"  readonly={readonly}",
			">",
			"  <Fragment>",
			"    <Field",
			"      label=\"链接\"",
			"      name=\"link\"",
			"      render={(formik) => {",
			"        const link = formik.field.value;",
			"        return (",
			"          <Form.Text>",
			"            <a href={link} target={link}>",
			"              腾讯官网",
			"            </a>",
			"          </Form.Text>",
			"        );",
			"      }}",
			"    />",
			"    <TextField label=\"公司\" name=\"company\" />",
			"    <InputField label=\"部门\" name=\"noEdit\" noEdit />",
			"    <InputField label=\"姓名\" name=\"name\" required showSuccess={true} />",
			"    <InputField",
			"      label=\"年龄\"",
			"      name=\"age\"",
			"      tail=\"岁\"",
			"      type=\"number\"",
			"      message=\"最大不超过200岁\"",
			"    />",
			"    <NumberInputField",
			"      label=\"年龄2\"",
			"      name=\"age2\"",
			"      required",
			"      min={1}",
			"      max={100}",
			"      unit=\"岁\"",
			"    />",
			"    <SelectField",
			"      label=\"性别\"",
			"      name=\"gender\"",
			"      options={[",
			"        { value: 1, text: '男' },",
			"        { value: 2, text: '女' }",
			"      ]}",
			"      onChange={(value, name) => {",
			"        console.log(name, value);",
			"      }}",
			"      readonlyValue=\"男\"",
			"      required",
			"    />",
			"    <CheckboxField",
			"      label=\"兴趣爱好\"",
			"      name=\"hobby\"",
			"      options={[",
			"        { value: '1', text: '篮球' },",
			"        { value: '2', text: '羽毛球', disabled: true },",
			"        { value: '3', text: '桌球' },",
			"        { value: '4', text: '乒乓球' },",
			"        { value: '5', text: '足球' },",
			"        { value: '6', text: '排球' },",
			"        { value: '7', text: '看电影' },",
			"        { value: '8', text: '看书' },",
			"        { value: '9', text: '爬山' }",
			"      ]}",
			"      onChange={(value, name) => {",
			"        console.log(name, value);",
			"      }}",
			"      readonlyValue=\"篮球，羽毛球\"",
			"      required",
			"    />",
			"    <RadioField",
			"      label=\"学历\"",
			"      name=\"education\"",
			"      options={[",
			"        { value: 'bachelor', text: '大学' },",
			"        { value: 'master', text: '硕士' },",
			"        { value: 'doctor', text: '博士', disabled: true }",
			"      ]}",
			"      onChange={(value, name) => {",
			"        console.log(name, value);",
			"      }}",
			"    />",
			"    <SwitchField",
			"      label=\"是否996\"",
			"      name=\"overtime\"",
			"      readonlyValue=\"是\"",
			"      onChange={(value, name) => {",
			"        console.log(name, value);",
			"      }}",
			"      required",
			"    />",
			"    <PhoneField label=\"办公电话\" name=\"tel\" required />",
			"      <CustomField",
			"      readonlyValue=\"自定义1\"",
			"      label=\"自定义\"",
			"      options={[",
			"        {",
			"          value: '自定义1',",
			"          flag: true",
			"        },",
			"        {",
			"          value: '自定义2',",
			"          flag: true",
			"        },",
			"        {",
			"          value: '自定义3',",
			"          flag: true",
			"        },",
			"        {",
			"          value: '一小时'",
			"        },",
			"        {",
			"          value: '二小时'",
			"        }",
			"      ]}",
			"      name=\"time\"",
			"      required",
			"      onChange={(value, name) => {",
			"        console.log(name, value);",
			"      }}",
			"    />",
			"    <AddressField label=\"地址\" name=\"address\" required />",
			"    <IPInputField",
			"      label=\"IP\"",
			"      name=\"ipAddress\"",
			"      readonlyPositions={[3, 4]}",
			"      ipChange={({ ip, mask }) => {",
			"        console.log('Ip changed:', ip, mask);",
			"      }}",
			"      required",
			"    />",
			"    <TagSelectField",
			"      label=\"标签\"",
			"      name=\"tags\"",
			"      options={[",
			"        { text: 'link', value: 'link' },",
			"        { text: 'zelda', value: 'zelda' },",
			"        { text: 'mario', value: 'mario' },",
			"        { text: 'peach', value: 'peach', disabled: true },",
			"        { text: 'luigi', value: 'luigi' }",
			"      ]}",
			"    />",
			"      {!readonly && (",
			"      <RangePickerField label=\"工作时长\" name=\"workTime\" />",
			"    )}",
			"    <TableField",
			"      label=\"工作经历\"",
			"      name=\"experience\"",
			"      required",
			"      bordered",
			"      readonlyValue=\"暂无实现\"",
			"      columns={[",
			"        {",
			"          key: 'company',",
			"          header: '公司',",
			"          width: '35%',",
			"          render: (",
			"            x,",
			"            key,",
			"            index,",
			"            { add, remove, reset, fieldError, field, form }",
			"          ) => {",
			"            const { company } = x;",
			"",
			"            console.log(fieldError);",
			"",
			"            return (",
			"              <Input",
			"                value={company}",
			"                onChange={(value) => {",
			"                  x.company = value;",
			"                  reset(index, x);",
			"                }}",
			"              />",
			"            );",
			"          }",
			"        },",
			"        {",
			"          key: 'position',",
			"          header: '职位',",
			"          width: '35%',",
			"          render: (x, key, index, { add, remove, reset }) => {",
			"            const { position } = x;",
			"            return (",
			"              <Select",
			"                options={[",
			"                  {",
			"                    text: '前端',",
			"                    value: '前端'",
			"                  },",
			"                  {",
			"                    text: '后端',",
			"                    value: '后端'",
			"                  },",
			"                  {",
			"                    text: '产品',",
			"                    value: '产品'",
			"                  }",
			"                ]}",
			"                value={position}",
			"                onChange={(value) => {",
			"                  x.position = value;",
			"                  reset(index, x);",
			"                }}",
			"              />",
			"            );",
			"          }",
			"        },",
			"        {",
			"          key: 'operation',",
			"          header: '操作',",
			"          render: (x, key, index, { add, remove, reset }) => (",
			"            <a onClick={() => remove(index)}>删除</a>",
			"          )",
			"        }",
			"      ]}",
			"      bottomTip={({ add, remove, reset }) => (",
			"        <div style={{ textAlign: 'center' }}>",
			"          <a",
			"            href=\"javascript:void();\"",
			"            onClick={() => add({ name: '', position: '' })}",
			"          >",
			"            添加经历",
			"          </a>",
			"        </div>",
			"      )}",
			"    />",
			"    <TextareaField",
			"      size=\"l\"",
			"      label=\"备注\"",
			"      name=\"remark\"",
			"      style={{ height: '150px' }}",
			"      maxLength={200}",
			"      placeholder=\"最多输入200字符\"",
			"      required",
			"    />",
			"    {!readonly && (",
			"      <FullBlock>",
			"        <div style={{ textAlign: 'center' }}>",
			"          <Button type=\"primary\">提交</Button>",
			"        </div>",
			"      </FullBlock>",
			"    )}",
			"  </Fragment>",
			"</TCEForm>"
		],
		"description": "Form_基本用法"
	},
	"Step_基本用法": {
		"prefix": "tce-step",
		"body": [
			"<Step",
			"  steps={steps样例}",
			"  initStep={2}",
			"  initValues={{ name: 'dickens' }}",
			"  submitText=\"提交\"",
			"  onCancel={() => {",
			"    alert('cancel');",
			"  }}",
			"  style={{ padding: 20, textAlign: 'center' }}",
			"  contentPadding=\"0 20px\"",
			"/>"
		],
		"description": "Step_基本用法"
	},
	"Selector_基于TablePage封装的穿梭框组件": {
		"prefix": "tce-selector",
		"body": [
			"<Selector",
			"  sourceTablePage={{",
			"    columns: columns_left,",
			"    recordKey: 'key',",
			"    records: [",
			"      { key: 1, value: 1 },",
			"      { key: 2, value: 2 }",
			"    ],",
			"    onRowSelect: (_selectedRows) => {",
			"      setSelectedRows(_selectedRows);",
			"    },",
			"    rowSelectedKeys: selectedRows.map((el) => String(el.key)),",
			"    searchConfig: {",
			"      type: SearchType.Static,",
			"      // 此处 width 不用填写，组件会自动同左TablePage宽度对齐",
			"      // width: 355,",
			"      initValue: '搜索初始值',",
			"      placeholder: '搜索默认值'",
			"    },",
			"    rowSelectable: true",
			"  }}",
			"  targetTablePage={{",
			"    columns: columns_right,",
			"    records: selectedRows",
			"  }}",
			"  tip=\"支持按住shift键进行多选\"",
			"  titleLeft=\"左标题\"",
			"  titleRight=\"右标题\"",
			"/>"
		],
		"description": "Selector_基本用法"
	},
	"Detail_详情": {
		"prefix": "tce-detail",
		"body": [
			"<Detail",
			"  loading={false}",
			"  title=\"服务器详情\"",
			"  data={[",
			"    [",
			"      { label: 'ID1', value: 'ins-4m99aio4' },",
			"      { label: '状态1', value: '运行中' },",
			"      { label: '区域1', value: '香港一区' },",
			"      { label: '型号1', value: '标准型 S1' },",
			"      { label: 'IP1', value: '119.28.142.24' },",
			"    ],",
			"    [",
			"      { label: 'ID2', value: 'ins-4m99aio4' },",
			"      { label: '状态2', value: '运行中' },",
			"      { label: '区域2', value: '香港一区' },",
			"      { label: '型号2', value: '标准型 S1' },",
			"      { label: 'IP2', value: '119.28.142.24' },",
			"    ],",
			"  ]}",
			"/>"
		],
		"description": "Detail"
	},
	"GroupTitle_带有蓝色竖条的小标题": {
		"prefix": "tce-groupTitle",
		"body": [
			"<GroupTitle bubbleContent=\"针对指标结果进行过滤，只显示满足条件的计算指标结果（类似SQL中的Having子句）\">",
			"  过滤",
			"</GroupTitle>"
		],
		"description": "GroupTitle"
	},
	"LocalConfirm_就地确认": {
		"prefix": "tce-localConfirm",
		"body": [
			"<LocalConfirm",
			"  title=\"title\"",
			"  message=\"message\"",
			"  placement=\"bottom-start\"",
			"  onOk={() => {",
			"    alert('ok')",
			"  }}",
			">",
			"  <a>删除</a>",
			"</LocalConfirm>"
		],
		"description": "LocalConfirm"
	},
	"ConfirmModal_确认弹框": {
		"prefix": "tce-confirmModal",
		"body": [
			"<Button",
			"  type=\"primary\"",
			"  onClick={() => {",
			"    async function test() {",
			"      const closeModal = await openModal('标题', '提示内容', {",
			"        primary: { background: 'red', border: 'red' },",
			"      })",
			"      // 发送网络请求，成功后再关闭弹窗",
			"      if (closeModal) {",
			"        setTimeout(() => {",
			"          closeModal()",
			"        }, 1000)",
			"      }",
			"    }",
			"    test()",
			"  }}",
			">",
			"  确认弹框",
			"</Button>"
		],
		"description": "ConfirmModal"
	},
	"TableEditor_全表编辑": {
		"prefix": "tce-tableEditor",
		"body": [
			"<TableEditor",
			"  records={tableEditorRecords样例}",
			"  columns={tableEditorColumns样例}",
			"  onSubmit={(notRemovedData, removedData, originalData) => {",
			"    console.log('notRemovedData', notRemovedData);",
			"    console.log('removedData', removedData);",
			"    console.log('originalData', originalData);",
			"  }}",
			"  btnsList={[",
			"    {",
			"      text: t.cancelText,",
			"      type: 'weak',",
			"      onClick: () => {",
			"        alert('cancel');",
			"      },",
			"    },",
			"  ]}",
			"  maxSize={tableEditorMaxSize}",
			"  maxLimitTips=\"cannot add\"",
			"  hidePreAction={false}",
			"  showIndex={true}",
			"  rowFixable={(record) => (record.ipProtocol === 'all' ? 'bottom' : 'default')}",
			"  rowHideDefaultOperation={(record) => (record.ipProtocol === 'all' ? ['action'] : ['default'])}",
			"/>",
			""
		],
		"description": "TableEditor"
	},
	"TablePage_分页 & 数据请求表格": {
		"prefix": "tce-tablePage",
		"body": [
			"<TablePage card={false} onFetchData={onFetchData样例} columns={columns样例} fetchParam={projectId} pageConfig={{ recordCount: 0, pageSize: 10 }} />"
		],
		"description": "TablePage_分页 & 数据请求表格"
	},
	"useState": {
		"prefix": "us",
		"body": [
			"const [${1:state}, ${2:setState}] = useState<${3}>(${4});"
		],
		"description": "useState"
	},
	"useEffect": {
		"prefix": "ue",
		"body": [
			"useEffect(() => {",
			"  ${1://doSomeThing}",
			"}, []);"
		],
		"description": "useEffect"
	},
	"useContext": {
		"prefix": "uct",
		"body": [
			"const ${1:value} = useContext(${2:contextExample});"
		],
		"description": "useContext"
	},
	"useReducer": {
		"prefix": "urd",
		"body": [
			"const [${1:state}, ${2:dispatch}] = useReducer(${3:reducerExample}, {});"
		],
		"description": "useReducer"
	},
	"useCallback": {
		"prefix": "ucb",
		"body": [
			"const ${1} = useCallback(() => {",
			"  ${2://doSomething}",
			"}, []);"
		],
		"description": "useCallback"
	},
	"useMemo": {
		"prefix": "um",
		"body": [
			"const ${1} = useMemo(() => {${2}}, []);"
		],
		"description": "useMemo"
	},
	"useRef": {
		"prefix": "ur",
		"body": [
			"const ${1} = useRef(${2});"
		],
		"description": "useRef"
	},
	"flex布局": {
		"prefix": "tce-flex",
		"body": [
			"<div style={{ display: 'flex' }}>",
			"  <div style={{ background: 'green', height: '200px', flexGrow: 1 }}>",
			"    自适应",
			"  </div>",
			"  <div style={{ height: '200px', background: 'red', flexGrow: 0, flexShrink: 0, width: '300px' }}>",
			"    浮动元素",
			"  </div>",
			"</div>"
		],
		"description": "flex布局"
	}
}